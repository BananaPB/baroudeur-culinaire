diff --git a/node_modules/astro-collection-search/src/index.ts b/node_modules/astro-collection-search/src/index.ts
index bba7cbc..1825fa3 100644
--- a/node_modules/astro-collection-search/src/index.ts
+++ b/node_modules/astro-collection-search/src/index.ts
@@ -1,4 +1,3 @@
-
 import minisearch from 'minisearch';
 import fs from 'fs/promises';
 import path from 'path';
@@ -95,7 +94,13 @@ const ReadCollection = async (collection: string, fields: string[], logger: Astr
         const file = path.relative(dir, entry);
 
         const contents = await fs.readFile(entry, { encoding: 'utf-8' });
-        let [_, fm, body] = contents.split('---\n');
+        let parts = contents.split(/^---\s*[\r\n]+/m);
+        if (parts.length < 3) {
+          // Skip files without valid frontmatter
+          logger.warn(`Skipping file without valid frontmatter: ${entry}`);
+          continue;
+        }
+        let [_, fm, body] = parts;
 
         const doc: Doc = {
           body,
@@ -105,7 +110,24 @@ const ReadCollection = async (collection: string, fields: string[], logger: Astr
         
         const frontmatter: Record<string, string> = {};
         for (const line of fm.split(/\n/)) {
-          let [key, value] = line.split(':', 2).map(value => value.trim());
+          // Skip empty lines and comments
+          if (!line.trim() || line.trim().startsWith('#')) {
+            continue;
+          }
+          
+          // Find the first colon that's followed by a space or newline
+          const colonIndex = line.indexOf(':');
+          if (colonIndex === -1) {
+            continue; // Skip lines without colons
+          }
+          
+          const key = line.substring(0, colonIndex).trim();
+          let value = line.substring(colonIndex + 1).trim();
+          
+          // Handle multi-line values (lines that start with space after the first line)
+          if (value === '') {
+            continue; // Skip lines with empty values for now
+          }
 
           // remove quotes. minisearch doesn't care but when we show 
           // these values we don't want them to be quoted
