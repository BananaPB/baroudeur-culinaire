---
import TheoryCard from '@/components/TheoryCard.astro'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import PageHead from '@/components/PageHead.astro'
import PaginationComponent from '@/components/ui/pagination'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import { getAllPosts, groupPostsByYear } from '@/lib/theory-utils'
import type { PaginateFunction } from 'astro'
import Search from '@/components/Search.astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const allPosts = await getAllPosts()
  return paginate(allPosts, { pageSize: SITE.postsPerPage })
}

const { page } = Astro.props

const postsByYear = groupPostsByYear(page.data)
const years = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a))
---

<Layout class="max-w-3xl">
  <PageHead slot="head" title="Recettes" />
  <div class="ariane flex flex-col justify-center sm:flex-row sm:justify-between gap-5">
    <Breadcrumbs
      items={[
        { label: 'ThÃ©orie', href: '/theory', icon: 'lucide:notebook' },
        { label: `Page ${page.currentPage}`, icon: 'lucide:book-copy' },
      ]} />
      <!-- <Search hide-note results="search-results" content="search-none" collection='theory'/> -->
  </div>
  <div id="search-results" class="min-h-[calc(100vh-18rem)] flex-col gap-y-8 hidden"></div>

  <div id="search-none">
    <div class="flex min-h-[calc(100vh-18rem)] flex-col gap-y-8">
      {
        years.map((year) => (
          <section class="flex flex-col gap-y-4">
            <div class="font-medium">{year}</div>
            <ul class="flex flex-col gap-4">
              {postsByYear[year].map((post) => (
                <li>
                  <TheoryCard entry={post} />
                </li>
              ))}
            </ul>
          </section>
        ))
      }
    </div>
  </div>

  <PaginationComponent
    currentPage={page.currentPage}
    totalPages={page.lastPage}
    baseUrl="/theory/"
    client:load
  />
</Layout>
